name: Docker

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [ published ]

permissions:
  contents: write
  packages: write

jobs:
  build-and-publish:
    name: "Build and publish Docker image"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Nix
        uses: cachix/install-nix-action@3715ab1a11cac9e991980d7b4a28d80c7ebdd8f9 # v28
      - name: Install dependencies
        run: nix-shell --run 'composer install && pnpm install && pnpm build'

      - name: Build image
        run: |
          if ${{ startsWith(github.ref, 'refs/tags/') }}; then
            docker buildx build -t ghcr.io/gashmob/piclib:latest --build-context=project=. tools/docker
            docker buildx build -t ghcr.io/gashmob/piclib:$(cat VERSION) --build-context=project=. tools/docker
          else
            docker buildx build -t ghcr.io/gashmob/piclib:devel --build-context=project=. tools/docker
          fi
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_ENV
      - name: Log into ghcr.io
        if: ${{ env.branch == 'master' }}
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Publish image
        if: ${{ env.branch == 'master' }}
        run: |
          if ${{ startsWith(github.ref, 'refs/tags/') }}; then
            docker push ghcr.io/gashmob/piclib:latest
            docker push ghcr.io/gashmob/piclib:$(cat VERSION)
          else
            docker push ghcr.io/gashmob/piclib:devel
          fi
